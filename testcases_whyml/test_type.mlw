type option 'a = None | Some (int) (string)
type option2 'a = None2 | Some2 int int

type tree 'a = 
	| Empty
	| NonEmpty 'a (tree 'a) (tree 'a)

(* Without generics [Nothing] *)
type tree2 = 
	| Empty2
	| NonEmpty2 int tree2 tree2

type list 'a = Nil | Cons 'a (list 'a)

type list2 = Nil2 | Cons2 int list2

let f x = x
let g() = f Empty
let a = 5
let h() = f a 
